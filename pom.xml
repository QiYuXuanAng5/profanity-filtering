<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>groupId</groupId>
    <artifactId>profanity-filtering</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <flink.version>1.17.1</flink.version>
        <scala.version>2.12</scala.version>
        <hadoop.version>3.3.4</hadoop.version>
        <flink-cdc.version>2.4.0</flink-cdc.version>
        <fastjson.version>1.2.83</fastjson.version>
        <hbase.version>2.4.11</hbase.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.houbb</groupId>
            <artifactId>sensitive-word</artifactId>
            <version>0.9.0</version> <!-- 检查最新版本 -->
        </dependency>

        <!-- flink 相关依赖 开始 -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-hbase_2.11</artifactId>
            <version>1.10.3</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-orc</artifactId>
            <version>${flink.version}</version>
        </dependency>


        <!--        flink 流批开发依赖包-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-clients</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        flink 本地WebUI 依赖-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime-web</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--        kafka 依赖-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!--        flink RocksDB 依赖-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-statebackend-rocksdb</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        flink table 依赖环境-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-runtime</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-planner-loader</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-files</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        Table API 依赖-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        Table API + DataStream 相互集成 -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-api-java-bridge</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        Flink 解析JSON-->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-json</artifactId>
            <version>${flink.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        Flink CDC MySQL connector-->
        <dependency>
            <groupId>com.ververica</groupId>
            <artifactId>flink-connector-mysql-cdc</artifactId>
            <version>2.4.0</version>
            <!--                <scope>provided</scope>-->
        </dependency>


        <dependency>
            <groupId>com.alibaba.hologres</groupId>
            <artifactId>hologres-connector-flink-1.17</artifactId>
            <version>1.4.2</version>
            <classifier>jar-with-dependencies</classifier>
            <scope>provided</scope>
        </dependency>


        <!-- flink 相关依赖 结束 -->

        <!-- hadoop 相关依赖 开发 -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
        </dependency>

        <!--如果保存检查点到hdfs上，需要引入此依赖-->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.apache.hadoop</groupId>-->
        <!--            <artifactId>hadoop-auth</artifactId>-->
        <!--            &lt;!&ndash;                <scope>provided</scope>&ndash;&gt;-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <groupId>org.slf4j</groupId>-->
        <!--                    <artifactId>slf4j-reload4j</artifactId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->
        <!-- hadoop 相关依赖 结束 -->


        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <version>2.14.0</version>
            <!--                <scope>provided</scope>-->
        </dependency>

        <!--            <dependency>-->
        <!--                <groupId>org.projectlombok</groupId>-->
        <!--                <artifactId>lombok</artifactId>-->
        <!--                <version>${lombok.version}</version>-->
        <!--                <scope>provided</scope>-->
        <!--            </dependency>-->

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!--            <dependency>-->
        <!--                <groupId>com.google.guava</groupId>-->
        <!--                <artifactId>guava</artifactId>-->
        <!--                <version>${guava.version}</version>-->
        <!--            </dependency>-->

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.11.0</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.11.0</version>
        </dependency>

        <!--            <dependency>-->
        <!--                <groupId>cn.hutool</groupId>-->
        <!--                <artifactId>hutool-all</artifactId>-->
        <!--                <version>${hutool.version}</version>-->
        <!--            </dependency>-->

        <dependency>
            <artifactId>commons-cli</artifactId>
            <groupId>commons-cli</groupId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>compile</scope>
        </dependency>

        <!--            <dependency>-->
        <!--                <groupId>com.squareup.okhttp3</groupId>-->
        <!--                <artifactId>okhttp</artifactId>-->
        <!--                <version>${okhttp.version}</version>-->
        <!--            </dependency>-->

        <!-- parquet 文件格式相关依赖 开始 -->
        <!--            <dependency>-->
        <!--                <groupId>org.apache.parquet</groupId>-->
        <!--                <artifactId>parquet-avro</artifactId>-->
        <!--                <version>1.10.0</version>-->
        <!--            </dependency>-->

        <!--            <dependency>-->
        <!--                <groupId>org.apache.parquet</groupId>-->
        <!--                <artifactId>parquet-hadoop</artifactId>-->
        <!--                <version>1.10.0</version>-->
        <!--            </dependency>-->

        <!--            <dependency>-->
        <!--                <groupId>org.apache.flink</groupId>-->
        <!--                <artifactId>flink-parquet</artifactId>-->
        <!--                <version>1.8.0</version>-->
        <!--            </dependency>-->
        <!-- parquet 文件格式相关依赖 结束 -->

        <!-- mysql 相关依赖 开始 -->


        <!--            <dependency>-->
        <!--                <groupId>commons-dbutils</groupId>-->
        <!--                <artifactId>commons-dbutils</artifactId>-->
        <!--                <version>1.7</version>-->
        <!--            </dependency>-->

        <!-- mysql 相关依赖 结束 -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <excludes>
                                    <exclude>com.google.code.findbugs:jsr305</exclude>
                                    <exclude>org.slf4j:*</exclude>
                                    <exclude>log4j:*</exclude>
                                    <exclude>org.apache.hadoop:*</exclude>
                                </excludes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <!--  Do not copy the signatures in the META-INF folder.Otherwise, this might cause SecurityExceptions when using the JAR.  -->
                                    <!--  打包时不复制META-INF下的签名文件，避免报非法签名文件的SecurityExceptions异常 -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers combine.children="append">
                                <!--  The service transformer is needed to merge META-INF/services files  -->
                                <!--  connector和format依赖的工厂类打包时会相互覆盖，需要使用ServicesResourceTransformer解决 -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>